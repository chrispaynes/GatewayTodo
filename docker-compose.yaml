version: "3.7"
networks:
    proxy:
        driver: bridge
services:
    ui:
        container_name: api
        build:
            context: ./ui
            dockerfile: Dockerfile
        image: api:latest
        restart: always
        # networks:
        #     - proxy
        ports:
            - "8080:8080"
        volumes:
            - /go/src/github.com/chrispaynes/vorChall:/go/src/github.com/chrispaynes/vorChall
        env_file:
            # VARIABLES:
            #   - POSTGRES_USER
            #   - POSTGRES_PASSWORD
            #   - POSTGRES_DB
            - ./api/api.env
            - ./db/postgres.env
        environment:
            - LOG_LEVEL=debug
    api:
        container_name: api
        build:
            context: ./api
            dockerfile: Dockerfile
        image: api:latest
        restart: always
        depends_on:
            - postgres
        networks:
            - proxy
        ports:
            - "3000:3000"
            - "3001:3001"
        volumes:
            - ./vorChall/api:/go/src/github.com/chrispaynes/vorChall
        env_file:
            # VARIABLES:
            #   - POSTGRES_USER
            #   - POSTGRES_PASSWORD
            #   - POSTGRES_DB
            #   - POSTGRES_HOST
            - ./api/api.env
            - ./db/postgres.env
        environment:
            - LOG_LEVEL=debug
    postgres:
        container_name: todos-postgres
        build:
            context: ./db
            dockerfile: Dockerfile
        image: todos-postgres:latest
        restart: always
        networks:
            - proxy
        env_file:
            # VARIABLES:
            #   - POSTGRES_USER
            #   - POSTGRES_PASSWORD
            #   - POSTGRES_DB
            #   - POSTGRES_HOST
            - ./db/postgres.env
        ports:
            - "5432:5432"
        volumes:
            - ./db/pgdata:/var/lib/postgresql/data

